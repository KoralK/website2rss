name: Generate RSS and HTML

on:
  push:
    branches:
      - main

jobs:
  generate_rss:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Test Gemini API
        id: gemini_api_test
        run: |
          API_KEY="${{ secrets.GEMINI_FLASH_API_KEY }}"
          if [ -z "$API_KEY" ]; then
            echo "::error::GEMINI_FLASH_API_KEY secret is not set. Gemini API test will be skipped."
            echo "GEMINI_API_TEST_RESULT=skipped" >> $GITHUB_OUTPUT
            exit 0
          fi

          RESPONSE=$(curl -s "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent?key=$API_KEY" \
          -H 'Content-Type: application/json' \
          -X POST \
          -d '{
            "contents": [{
              "parts":[{"text": "Explain how AI works"}]
            }]
          }')

          if echo "$RESPONSE" | jq -e '.error' > /dev/null 2>&1; then
            echo "::error::Gemini API test failed. Response: $RESPONSE"
            echo "GEMINI_API_TEST_RESULT=failed" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "Gemini API test successful. Response: $RESPONSE"
            echo "GEMINI_API_TEST_RESULT=success" >> $GITHUB_OUTPUT
          fi

      - name: Log Gemini API Test Result
        run: |
          echo "Gemini API Test Result: ${{ steps.gemini_api_test.outputs.GEMINI_API_TEST_RESULT }}"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install google-generativeai

      - name: Run website2rss script
        run: python website2rss.py

      - name: Debug file listing
        run: ls -la

      - name: Verify bundle_rss.json exists
        run: |
          if [ ! -f bundle_rss.json ]; then
            echo "Error: bundle_rss.json not found."
            exit 1
          fi

      - name: Generate dynamic HTML
        run: python generate_dynamic_html.py
        env:
          GEMINI_FLASH_API_KEY: ${{ secrets.GEMINI_FLASH_API_KEY }}

      - name: Verify HTML file exists
        run: |
          if [ ! -f smart_home_news.html ]; then
            echo "Error: smart_home_news.html not found."
            exit 1
          fi

      - name: Upload HTML artifact
        uses: actions/upload-artifact@v3
        with:
          name: smart-home-news
          path: smart_home_news.html
      - name: Debug environment
        run: env

  post_to_blogger:
    runs-on: ubuntu-latest
    needs: generate_rss
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create secret.json dynamically
        run: |
          echo "${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}" > secret.json
          python -m json.tool secret.json > temp.json && mv temp.json secret.json

      - name: Run Blogger Post Script
        run: python post2blogger.py
        env:
          GOOGLE_APPLICATION_CREDENTIALS: secret.json

      - name: Debug credentials file
        run: cat secret.json